#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# shellcheck shell=bash disable=SC1091,SC2039,SC2166

paths=('etc/skel')

# Pre-installation: Make a backup of the original configuration file and other files
pre_install() {
	# Backup do arquivo de configuração principal
	[ -f /etc/nanorc ] && mv -f /etc/nanorc /etc/nanorc.bak
	[ -f /etc/skel/.bash_logout ] && mv -f /etc/skel/.bash_logout /etc/skel/.bash_logout.bak
	[ -f /etc/skel/.bash_profile ] && mv -f /etc/skel/.bash_profile /etc/skel/.bash_profile.bak
	[ -f /etc/skel/.bashrc ] && mv -f /etc/skel/.bashrc /etc/skel/.bashrc.bak

	# Diretórios que precisam de backup
	for path in "${paths[@]}"; do
		if [ -d "/$path" ]; then
			for file in "/$path"/*; do
				if [ -f "$file" ]; then
					mv -f "$file" "${file}.bak"
				fi
			done
		fi
	done
}

# Post-installation: Replace the configuration file with the new version and manage .new files
post_install() {
	[ -f /etc/nanorc.new ] && mv -f /etc/nanorc.new /etc/nanorc
	[ -f /etc/skel/.bash_logout.new ] && mv -f /etc/skel/.bash_logout.new /etc/skel/.bash_logout
	[ -f /etc/skel/.bash_profile.new ] && mv -f /etc/skel/.bash_profile.new /etc/skel/.bash_profile
	[ -f /etc/skel/.bashrc.new ] && mv -f /etc/skel/.bashrc.new /etc/skel/.bashrc

	for new_path in "${paths[@]}"; do
		if [ -d "/${new_path}" ]; then
			for i in /${new_path}/*.new; do
				if [ -f "$i" ]; then
					mv -f "$i" "${i%.new}"
				fi
			done
		fi
	done
}

# Post-remove: Restore the original configuration file if it exists
post_remove() {
	[ -f /etc/nanorc.bak ] && mv -f /etc/nanorc.bak /etc/nanorc
	[ -f /etc/skel/.bash_logout.bak ] && mv -f /etc/skel/.bash_logout.bak /etc/skel/.bash_logout
	[ -f /etc/skel/.bash_profile.bak ] && mv -f /etc/skel/.bash_profile.bak /etc/skel/.bash_profile
	[ -f /etc/skel/.bashrc.bak ] && mv -f /etc/skel/.bashrc.bak /etc/skel/.bashrc

	for new_path in "${paths[@]}"; do
		if [ -d "/${new_path}" ]; then
			for i in /${new_path}/*; do
				if [[ -f "$i" && "$i" == *.new ]]; then
					rm -f "$i"
				fi
			done
		fi
	done
}
